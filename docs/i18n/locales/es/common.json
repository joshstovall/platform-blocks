{
  "app": {
    "title": "Platform Blocks",
    "tagline": "Sistema de Diseño React Native",
    "version": "Versión",
    "libraryDescription": "Biblioteca de UI React Native para iOS, Android y Web"
  },
  "nav": {
    "gettingStarted": "Primeros Pasos",
    "overview": "Resumen",
    "installation": "Instalación",
    "platforms": "Plataformas",
    "faq": "Preguntas Frecuentes",
    "faqs": "Preguntas Frecuentes",
    "components": "Componentes",
    "allComponents": "Todos los Componentes",
    "examples": "Ejemplos",
    "spotlight": "Destacado",
    "icons": "Iconos SVG",
    "demos": "Demostraciones",
    "theming": "Tematización",
    "textSizeTest": "Prueba de Tamaño de Texto",
    "changelog": "Registro de Cambios",
    "docs": "Documentos"
  },
  "actions": {
    "searchPlaceholder": "Buscar componentes, demostraciones, documentación...",
    "github": "GitHub",
    "npm": "NPM",
    "toggleTheme": "Alternar tema",
    "switchLocale": "Cambiar idioma",
    "starOnGithub": "Estrella en GitHub",
    "joinDiscord": "Unirse a Discord",
    "githubShort": "GitHub",
    "discordShort": "Discord"
  },
  "footer": {
    "app": {
      "title": "Platform Blocks",
      "tagline": "Un sistema de diseño React Native integral con componentes que funcionan sin problemas en iOS, Android y Web.",
      "version": "Versión",
      "libraryDescription": "Biblioteca de UI React Native para iOS, Android y Web"
    },
    "versionLine": "{{version}} - Construido con React Native",
    "builtBy": "Construido por"
  },
  "languages": {
    "en": "Inglés",
    "fr": "Francés"
  },
  "spotlight": {
    "noResults": "No se encontraron resultados para \"{{query}}\""
  },
  "button": {
    "demo": {
      "submit": "Enviar"
    }
  },
  "localization": {
    "title": "Localización",
    "intro": "PlatformBlocks incluye una capa i18n ligera. Proporcione recursos por idioma, envuelva su app con I18nProvider y traduzca usando la prop tx o el hook useI18n.",
    "current": "Idioma actual: {{locale}}",
    "exampleGreeting": "Hola {{name}}!",
    "helloWorld": "¡Hola, Mundo!",
    "steps": {
      "resources": "Cree archivos JSON de recursos por idioma (claves planas o anidadas).",
      "aggregate": "Agréguelos en un objeto resources pasado a I18nProvider.",
      "provider": "Envuelva la raíz con <I18nProvider initial={{ resources, locale: 'en', fallbackLocale: 'en' }}>.",
      "usageTx": "Use <Text tx=\"localization.exampleGreeting\" txParams={{ name: 'Ada' }} /> para renderizar el texto traducido.",
      "usageHook": "O llame const { t, setLocale, locale } = useI18n(); luego t('localization.exampleGreeting', { name: 'Ada' }).",
      "switch": "Cambie de idioma llamando setLocale('fr'), etc. Los componentes se re-renderizan.",
      "format": "Use formatDate / formatNumber / formatRelativeTime para formatos localizados.",
      "missing": "Las claves faltantes usan fallbackLocale y luego devuelven la clave."
    }
  }
}
